name: Deploy Next.js Site

on:
  # Executa na push para a branch principal
  push:
    branches: ["main"]
  # Permite executar manualmente a partir da aba Actions
  workflow_dispatch:

# Define permissões do token GITHUB_TOKEN para permitir deployment para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permite apenas um deployment concorrente, pulando execuções em andamento
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job de build
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Gere uma nova chave de cache quando o lockfile muda
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
      - name: Debug environment and dependencies
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "Next.js version: $(npx next --version)"
          echo "Current directory: $(pwd)"
          echo "Repository contents:"
          ls -R
          echo "Installed dependencies:"
          npm list
      - name: Build with Next.js
        run: |
          npx next build
          echo "Build directory contents:"
          ls -R .next/
      - name: Verify output directory
        run: |
          echo "Output directory contents:"
          ls -R out/
          echo "Checking for album pages:"
          find out -name "index.html" | grep album
          echo "Detailed album page structure:"
          find out/album -type d
          echo "Album page HTML files:"
          find out/album -name "index.html"
      - name: Verify routing
        run: |
          echo "Checking generated routes:"
          cat .next/server/server-reference-manifest.json || echo "No server reference manifest found"
          echo "Checking static routes:"
          cat .next/routes-manifest.json || echo "No routes manifest found"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Job de deployment
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 